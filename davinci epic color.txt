-- Ensure we're in DaVinci Resolve's scripting environment
local Resolve = Resolve() or error("DaVinci Resolve scripting environment not found")

-- Initialize Resolve and get the current project
local projectManager = Resolve:GetProjectManager()
local project = projectManager:GetCurrentProject() or error("No project found")

-- Function to set color science to ACEScct
local function setColorScienceToACEScct()
    project:SetSetting('colorScienceMode', 'ACEScct')
    project:SetSetting('ACESVersion', '1.3')
    project:SetSetting('ACESInputTransform', 'ARRI')
    project:SetSetting('ACESOutputTransform', 'Rec.709')
end

-- Function to adjust luminance based on surrounding color data
local function adjustLuminance(clip)
    if clip.GetSurroundingColorData then
        local surroundingData = clip:GetSurroundingColorData()
        local averageLuminance = 0
        for _, color in ipairs(surroundingData) do
            averageLuminance = averageLuminance + color.Luminance
        end
        averageLuminance = averageLuminance / #surroundingData
        if averageLuminance < 0.5 then
            clip:SetProperty('Brightness', 1.2)
            print("Brightness adjusted for clip")
        else
            clip:SetProperty('Brightness', 1.0)
        end
    else
        print("GetSurroundingColorData function not available for clip")
    end
end

-- Function to apply basic color adjustments to all clips
local function applyColorAdjustments()
    local timeline = project:GetCurrentTimeline()
    local clips = timeline:GetItemListInTrack('video', 1)
    for _, clip in ipairs(clips) do
        clip:SetProperty('Lift.R', 0.95)
        clip:SetProperty('Lift.G', 0.95)
        clip:SetProperty('Lift.B', 0.95)
        clip:SetProperty('Gamma.R', 1.0)
        clip:SetProperty('Gamma.G', 1.0)
        clip:SetProperty('Gamma.B', 1.0)
        clip:SetProperty('Gain.R', 1.05)
        clip:SetProperty('Gain.G', 1.05)
        clip:SetProperty('Gain.B', 1.05)
        clip:SetProperty('Saturation', 1.2)
        clip:SetProperty('Contrast', 1.1)
        clip:SetProperty('Hue', 0.5)
        adjustLuminance(clip)
    end
end

-- Function to apply built-in LUT
local function applyBuiltInLUT(lutName)
    local timeline = project:GetCurrentTimeline()
    local clips = timeline:GetItemListInTrack('video', 1)
    for _, clip in ipairs(clips) do
        clip:SetLUT("LUTs/" .. lutName)
        print("LUT applied for clip")
    end
    print("Built-in LUT applied successfully to all clips")
end

-- Function to save the project
local function saveProject()
    if projectManager:SaveProject() then
        print("Project saved successfully.")
    else
        print("Failed to save the project.")
    end
end

-- Main function
local function main()
    if project then
        setColorScienceToACEScct()
        applyColorAdjustments()
        applyBuiltInLUT("ARRI LogC to Rec709")  -- Change this to the desired built-in LUT name
        saveProject()
        print("Color science, adjustments, LUT, and auto-save applied successfully.")
    else
        print("No project found.")
    end
end

-- Run the main function
main()
